.\"  -*- nroff -*-
.\"  $Id: xviv_msg_filter.1 1233 2022-04-30 07:01:23Z mueller $
.\" SPDX-License-Identifier: GPL-3.0-or-later
.\" Copyright 2016-2018 by Walter F.J. Mueller <W.F.J.Mueller@gsi.de>
.\" 
.\" ------------------------------------------------------------------
.TH XVIV_MSG_FILTER 1 2018-12-24 "Retro Project" "Retro Project Manual"
.\" ------------------------------------------------------------------
.SH NAME
xviv_msg_filter \- message filter for Xilinx Vivado tool chain log files
.\" ------------------------------------------------------------------
.SH SYNOPSIS
.
.SY xviv_msg_filter
.RI [ OPTION ]...
.I TYPE
.I VMFSET
.I LOGFILE
.
.SY xviv_msg_filter
.B \-\-help
.YS
.
.\" ------------------------------------------------------------------
.SH DESCRIPTION
.\" ----------------------------------------------
Scans the log file \fILOGFILE\fP generated by Xilinx Vivado for messages and
compares  these messages against a set of message filter rules defined in the
\fIVMFSET\fP file and selected by \fITYPE\fP.
xviv_msg_filter will print all non-matching messages.
All filter rules which do not match a message are also listed, these
messages are considered missing.
Matched messages are considered accepted. 
In normal operation, they will not create output.
xviv_msg_filter is useful for example in \fBmake\fP(1) based flows to 
create a short summary from the log files.

The accepted values for \fITYPE\fP are:

.RS 3
.PD 0
.IP \fBsyn\fP 6
Vivado synthesis flow
.IP \fBimp\fP
Vivado implementation flow
.IP \fBbit\fP
Vivado bitfile generation step
.PD
.RE
.
.\" ------------------------------------------------------------------
.SH OPTIONS
.\" ----------------------------------------------
.IP \fB\-\-pacc\fP
Print a summary of all accepted messages. The match count for each rule is 
listed.
.
.IP \fB\-\-pcnt\fP
Print a statistics of all detected messages.
.
.\" ----------------------------------------------
.IP \fB\-\-help\fP
print full help.
.
.\" ------------------------------------------------------------------
.SH MESSAGE FILTER FILE FORMAT
.\" ----------------------------------------------
Simply a list of match rules structured by section headers 
of the form "[TYPE]". '#' is interpreted as a comment delimiter, everything
after a '#' in a line will be ignored.
xviv_msg_filter will extract the rules of the section matching the
\fITYPE\fP argument.

A line of the form
.EX
   {yyyy.n:yyyy.n}
   {:yyyy.n}
   {yyyy.n:}
   {:}
.EE
acts as a version range tag and specifies a range of Vivado versions for which
the following rules shall be applied.
"{:2016.4}" means up to version 2016.4, "{:2017.1}" from 2017.1 on, while
"{:}" cancels version range checking.

A line starting with '@' specifies a nested mfset file. This allows to
store the message filter sets in a structured way and factor out common
rule sets in separate files.

Each rule line has the format
.EX
   <mode> [<name>] <pattern>
.EE
with
.IP \fBmode\fP 10
determines how the rule is applied
.RS
.PD 0
.IP \fBI\fP 4
matching messages are ignored
.IP \fBi\fP 4
matching messages are not printed, if no matching message is found a 
notification is printed.
.IP \fBc\fP 4
matching messages are counted, only a summary of the message counts is
printed.
.IP \fBr\fP 4
signals that at least one matching message is required, if none is seen, a
notification is printed.
.PD
.RE
.IP \fBname\fP
Vivado message name, enclosed in [] brackets
.IP \fBpattern\fP
regular expression to match the message text. This field is optional, if 
omitted all messages with the given name will match. '[' and ']' characters
are escaped to '\\[' and '\\]', because [] is very often part of signal 
names. Character set matches are therefore not possible, unfortunately.

.SS Example message filter file
.EX
  # -----------
  [syn]
  i [Designutils 20-1567]           # false_path -hold and synth
  # unused sequential element
  i [Synth 8-3332] R_LREGS_reg[attn][\\d*]
  i [Synth 8-3332] HIO/R_REGS_reg[(btn|swi)(eff)?][\\d*]
  # -----------
  [imp]
  I [Vivado 12-2489]                # multiple of 1 ps
  # -----------
  [bit]
  i [DRC DPOP-1] PREG Output pipelining
  i [DRC DPOP-2] MREG Output pipelining
.EE
.\" ------------------------------------------------------------------
.SH EXIT STATUS
If \fITYPE\fP is invalid or the \fIVMFSET\fP or \fILOGFILE\fP files
can't be opened an exit status 1 is returned.

.\" ------------------------------------------------------------------
.SH EXAMPLES
.IP "\fBxviv_msg_filter syn proj.vmfset proj_syn.log\fR" 4
Generate a short summary of the Vivado synthesis log file.
.
.\" ------------------------------------------------------------------
.SH "SEE ALSO"
.BR xviv_msg_summary (1)
.
.\" ------------------------------------------------------------------
.SH AUTHOR
Walter F.J. Mueller <W.F.J.Mueller@gsi.de>
